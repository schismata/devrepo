import urllib,urllib2,re,xbmcplugin,xbmcgui,sys,xbmc,xbmcaddon,os,random,urlparse,time,net,urlresolverfrom t0mm0.common.addon import Addonfrom metahandler import metahandlersnet = net.Net()from resources.lib.libraries import controlfrom resources.lib.libraries import clientaddon_id = 'plugin.video.couchtime'selfAddon = xbmcaddon.Addon(id=addon_id)datapath= xbmc.translatePath(selfAddon.getAddonInfo('profile'))metaget = metahandlers.MetaData(preparezip=False)addon = Addon(addon_id, sys.argv)fanart = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id , 'fanart.jpg'))icon = xbmc.translatePath(os.path.join('special://home/addons/' + addon_id, 'icon.png'))metaset = selfAddon.getSetting('enable_meta')def CATEGORIES():        addDir2('Browse TV Shows','http://www.watchepisodes.com/home/series/page/1',9,icon,'',fanart)        addDir2('Popular Series','http://www.watchepisodes.com/home/popular-series',1,icon,'',fanart)        addDir2('New Series','http://www.watchepisodes.com/home/new-series',1,icon,'',fanart)        addDir2('Latest Episodes','http://www.watchepisodes.com/',7,icon,'',fanart)        addDir2('Popular Episodes of the Week','http://www.watchepisodes.com/home/latest-this-week',8,icon,'',fanart)	addDir2('Search','URL',3,icon,'',fanart)        addDir2('(TVOnline) Popular Shows','http://tvonline.tw/most-popular/',10,icon,'',fanart)        addDir2('(TVOnline) Last Added','http://tvonline.tw/latest-added/',10,icon,'',fanart)        addDir2('(TVOnline) Last Episodes','http://tvonline.tw/',15,icon,'',fanart)							        addDir2('(TVOnline) Search','URL',14,icon,'',fanart)        xbmc.executebuiltin('Container.SetViewMode(50)')def SEARCH():    search_entered =''    keyboard = xbmc.Keyboard(search_entered, 'Search Show')    keyboard.doModal()    if keyboard.isConfirmed():        search_entered = keyboard.getText().replace(' ','-')    if len(search_entered)>1:        url = 'http://www.watchepisodes.com/'+ search_entered                GETEPISODES(url,name)		def TOTALSEARCH():    search_entered =''    keyboard = xbmc.Keyboard(search_entered, 'Search Show')    keyboard.doModal()    if keyboard.isConfirmed():        search_entered = keyboard.getText().replace(' ','+')    if len(search_entered)>1:        url = 'http://tvonline.tw/search.php?key='+ search_entered                GETTVONLINESEARCH(url,name)def BROWSE(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile('<h3 class="wb-name"><a href="(.+?)">(.+?)</a></h3>').findall(link)	for url,name in match:		addDir(name,url,5,'',len(match),isFolder=True)	try: addDir2('NEXT >>>',nextpageurl,9,icon,'',fanart)	except:passdef GETTVONLINESEARCH(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile('<ul><li><a href="(.+?)" target="_blank">(.+?)</a></li>').findall(link)	for url,name in match:		url = "http://tvonline.tw/" + url		addDir3(name,url,11,icon,len(match),fanart)def GETTVONLINE(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile('<ul><li><a href="(.+?)" title=".+?">(.+?)</a>').findall(link)	for url,name in match:				addDir3(name,url,11,icon,len(match),fanart)def GETTVONLINESEASON(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile("<h3><a href='(.+?)' title='.+?'>(.+?)</a></h3>").findall(link)	for url,name in match:		addDir3(name,url,12,icon,len(match),fanart)	def GETTVONLINELASTEP(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile('<ul><li>\s*<a href="(.+?)" title=".+?">(.+?)</a>\s*</li></ul>').findall(link)	for url,name in match:		addDir3(name,url,13,icon,len(match),fanart)		def GETTVONLINEEP(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile("<strong>(.+?)</strong>(.+?)</a></li><li><a href='(.+?)'").findall(link)	for ep,ep2,url in match:		addDir3(ep + " " + ep2,url,13,icon,len(match),fanart)			def GETLINKS(url,name):	playername=name	randomitem = []	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile('<a href=".+?" data-episodeid=".+?" class=".+?" data-linkid=".+?"\s*data-actuallink="(.+?)" data-hostname="(.+?)"').findall(link)        for url,name in match:                      randomitem.append([url, name])        index = random.randrange(1, len(randomitem))        	for url,host in match:		# addDir(host,url,100,'',len(match))			autoplay = selfAddon.getSetting('enable_autoplay')			if autoplay == "false":					addDir(host,url,100,'',len(match))			else:				if not xbmc.Player().isPlaying():					try:						randomitem.append([url, name])						index = random.randrange(1, len(match))						playrandom = randomitem[index][0]						progressDialog = control.progressDialog						progressDialog.create(control.addonInfo('name'), '')						randomsource = selfAddon.getSetting('enable_random')						if randomsource == "true":							progressDialog.update(0, 'Trying: '+ playrandom, 'Please wait...')							req = urllib2.Request(playrandom)						else:							progressDialog.update(0, 'Trying: '+ url, 'Please wait...')							req = urllib2.Request(url)						req.add_header('User-Agent', 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3')						response = urllib2.urlopen(req)						link=response.geturl()						xbmc.sleep(1000)						stream_url = urlresolver.HostedMediaFile(link).resolve()						liz=xbmcgui.ListItem(name, iconImage=icon,thumbnailImage=icon); liz.setInfo( type="Video", infoLabels={ "Title": playername } )						ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=url,listitem=liz)						xbmc.Player ().play(stream_url, liz, False)						xbmc.sleep(10000)						addDir(url +' tested','',6,'','')					except:addDir(url +' not working','',6,'','')								addDir('Press Back to exit','',6,'','')				def GETMOVIES(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile('<div class="cb-first">\s*<a href="(.+?)" class="c-image"><img alt="(.+?)"').findall(link)	for url,name in match:		addDir(name,url,5,'',len(match),isFolder=True)		def GETEPISODES(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	             	match2=re.compile('<img title=".+?" alt=".+?" src="(.+?)"></a>').findall(link)	for cover in match2:		iconimage=cover        		fanart=cover	match=re.compile('<a title=".+?" href="(.+?)">\s*<div class="season">(.+?)</div>\s*<div class="episode">(.+?)</div>\s*<div class="e-name">(.+?)</div>').findall(link)	for url,season,ep,epname in match:		addDir3(season + " " + ep + " " + epname,url,6,iconimage,len(match),fanart)def GETLATESTEP(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	             	match=re.compile('<a title="(.+?)" href="(.+?)" class="episode">').findall(link)	for name,url in match:		name=re.sub("Watch","",name)		name=re.sub("Online","",name)		addDir3(name,url,6,icon,len(match),fanart)            def GETPOPEP(url,name):	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	             	match=re.compile('<a href="(.+?)" class="episode">(.+?)</a>').findall(link)	for url,name in match:		name=re.sub("Watch","",name)		name=re.sub("Online","",name)		addDir3(name,url,6,icon,len(match),fanart)def GETLINKSTVONLINE(url,name):	playername=name	randomitem = []	try:		pagenum = url.split('page/')		curpage = int(pagenum[1])		nextpage = curpage + 1	 	nextpageurl = pagenum[0]+'page/'+str(nextpage)	except:pass	link = open_url(url)	match=re.compile('<a href="javascript:" onclick="(.+?)" title=".+?">(.+?)</a>').findall(link)        # for url,name in match:                      # randomitem.append([url, name])        # index = random.randrange(1, len(randomitem))        	for url,host in match:			url = url.split("'")			url = url[1]		# addDir(host,url,100,'',len(match))			autoplay = selfAddon.getSetting('enable_autoplay')			if autoplay == "false":					addDir(host,url,100,'',len(match))			else:				if not xbmc.Player().isPlaying():					try:						randomitem.append([url, name])						index = random.randrange(1, len(match))						playrandom = randomitem[index][0]						progressDialog = control.progressDialog						progressDialog.create(control.addonInfo('name'), '')						randomsource = selfAddon.getSetting('enable_random')						if randomsource == "true":							progressDialog.update(0, 'Trying: '+ playrandom, 'Please wait...')							req = urllib2.Request(playrandom)						else:							progressDialog.update(0, 'Trying: '+ host, 'Please wait...')							req = urllib2.Request(url)						req.add_header('User-Agent', 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3')						response = urllib2.urlopen(req)						link=response.geturl()						xbmc.sleep(1000)						stream_url = urlresolver.HostedMediaFile(link).resolve()						liz=xbmcgui.ListItem(name, iconImage=icon,thumbnailImage=icon); liz.setInfo( type="Video", infoLabels={ "Title": playername } )						ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=url,listitem=liz)						xbmc.Player ().play(stream_url, liz, False)						xbmc.sleep(10000)						addDir(url +' tested','',11,'','')					except:addDir(url +' not working','',11,'','')								addDir('Press Back to exit','',11,'','')def PLAYLINK(name,url,iconimage):    try:        req = urllib2.Request(url)        req.add_header('User-Agent', 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3')        response = urllib2.urlopen(req)        link=response.geturl()        stream_url = urlresolver.HostedMediaFile(link).resolve()				 		        ok=True        liz=xbmcgui.ListItem(name, iconImage=icon,thumbnailImage=icon); liz.setInfo( type="Video", infoLabels={ "Title": name } )        ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=url,listitem=liz)        xbmc.Player ().play(stream_url, liz, False)    except: xbmc.executebuiltin("XBMC.Notification([COLOR red][B]Cannot play the link![/B][/COLOR],[COLOR lime][B]Try another one from the list!![/B][/COLOR],2000,"")")   def get_params():        param=[]        paramstring=sys.argv[2]        if len(paramstring)>=2:                params=sys.argv[2]                cleanedparams=params.replace('?','')                if (params[len(params)-1]=='/'):                        params=params[0:len(params)-2]                pairsofparams=cleanedparams.split('&')                param={}                for i in range(len(pairsofparams)):                        splitparams={}                        splitparams=pairsofparams[i].split('=')                        if (len(splitparams))==2:                                param[splitparams[0]]=splitparams[1]        return paramdef addDir2(name,url,mode,iconimage,description,fanart):        u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)+"&iconimage="+urllib.quote_plus(iconimage)+"&description="+urllib.quote_plus(description)        ok=True        liz=xbmcgui.ListItem(name.strip(), iconImage="DefaultFolder.png", thumbnailImage=iconimage)        liz.setInfo( type="Video", infoLabels={ "Title": name, "Plot": description} )        liz.setProperty('fanart_image', fanart)        ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=True)        return okdef addDir3(name,url,mode,iconimage,description,fanart,isFolder=True):            u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&site="+str(site)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)            ok=True            liz=xbmcgui.ListItem(name, iconImage=iconimage, thumbnailImage=fanart)            liz.setInfo( type="Video", infoLabels={ "Title": name } )            liz.setProperty('fanart_image', fanart)            ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=isFolder)            return okdef addDir(name,url,mode,iconimage,itemcount,isFolder=False): if metaset=='true':	try:			splitName=name.partition('(')			simplename=""			simpleyear=""			if len(splitName)>0:				simplename=splitName[0]				simpleyear=splitName[2].partition(')')			if len(simpleyear)>0:				simpleyear=simpleyear[0]			meta = metaget.get_meta('tvshow', simplename ,simpleyear)			u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&site="+str(site)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)			ok=True			liz=xbmcgui.ListItem(name, iconImage=meta['cover_url'], thumbnailImage=iconimage)			liz.setInfo( type="Video", infoLabels= meta )			contextMenuItems = []			contextMenuItems.append(('Movie Information', 'XBMC.Action(Info)'))			liz.addContextMenuItems(contextMenuItems, replaceItems=False)			if not meta['backdrop_url'] == '': liz.setProperty('fanart_image', meta['backdrop_url'])			else: liz.setProperty('fanart_image', fanart)			ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=isFolder,totalItems=itemcount)			return ok	except:       			u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&site="+str(site)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)			ok=True			liz=xbmcgui.ListItem(name, iconImage=icon, thumbnailImage=icon)			liz.setInfo( type="Video", infoLabels={ "Title": name } )			liz.setProperty('fanart_image', fanart)			ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=isFolder)			return ok else:		             u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&site="+str(site)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)            ok=True            liz=xbmcgui.ListItem(name, iconImage=icon, thumbnailImage=icon)            liz.setInfo( type="Video", infoLabels={ "Title": name } )            liz.setProperty('fanart_image', fanart)            ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=isFolder)            return okdef cleanHex(text):    def fixup(m):        text = m.group(0)        if text[:3] == "&#x": return unichr(int(text[3:-1], 16)).encode('utf-8')        else: return unichr(int(text[2:-1])).encode('utf-8')    try :return re.sub("(?i)&#\w+;", fixup, text.decode('ISO-8859-1').encode('utf-8'))    except:return re.sub("(?i)&#\w+;", fixup, text.encode("ascii", "ignore").encode('utf-8'))def open_url(url):        response = net.http_GET(url).content        response=cleanHex(response)        return responsedef setView(content, viewType):    if content:        xbmcplugin.setContent(int(sys.argv[1]), content)    if selfAddon.getSetting('auto-view')=='true':        xbmc.executebuiltin("Container.SetViewMode(%s)" % selfAddon.getSetting(viewType) )params=get_params(); url=None; name=None; mode=None; site=None; iconimage=Nonetry: site=urllib.unquote_plus(params["site"])except: passtry: url=urllib.unquote_plus(params["url"])except: passtry: name=urllib.unquote_plus(params["name"])except: passtry: mode=int(params["mode"])except: passtry: iconimage=urllib.unquote_plus(params["iconimage"])except: passprint "Site: "+str(site); print "Mode: "+str(mode); print "URL: "+str(url); print "Name: "+str(name)print paramsif mode==None or url==None or len(url)<1: CATEGORIES()elif mode==1: GETMOVIES(url,name)elif mode==5: GETEPISODES(url,name)elif mode==2: GETYEARS(url)elif mode==6: GETLINKS(url,name)elif mode==3: SEARCH()elif mode==4: GETGENRES(url)elif mode==7: GETLATESTEP(url,name)elif mode==8: GETPOPEP(url,name)elif mode==9: BROWSE(url,name)elif mode==10: GETTVONLINE(url,name)elif mode==11: GETTVONLINESEASON(url,name)elif mode==12: GETTVONLINEEP(url,name)elif mode==13: GETLINKSTVONLINE(url,name)elif mode==14: TOTALSEARCH()elif mode==15: GETTVONLINELASTEP(url,name)elif mode==100: PLAYLINK(name,url,iconimage)xbmcplugin.endOfDirectory(int(sys.argv[1]))